<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOpenFile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACuSURBVDhPY/j//z9FGAN8+/YtAYj/E4uh2hAAKHj/zb0T/+9sqyKI4QYgmwjC9/d1/X9yevn/
        D+8/4sQYBqCb/u7FI6waYRirAdgU4sLUMwBEUGzAvV1NYAFCGDlcQHyYAfOfnVuJoRgbfnRiPlYDHD6+
        uo+hGBd+/fAyqgHQQLz/8NBEDMXY8P29nVgNKCA29YHws8vbwDSyAQJfPr0DC5CKseYwUjBWQeLxfwYA
        /WYxi1ab8VcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnCopyGallery.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAABaSURBVDhP7ZJLCsAwCEQ9m/e/S9qN2ymWfEASOy1ZduAR
        FOetIgAkxszAcHdXAlVNoQRHOafsF/jAkAp8mUEJ2kHkF4yCv41PgshrQf1nPfsFGY8ChtrrASAXC7HT
        o827C3kAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnCopyIndex.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsAAAA7AAWrWiQkAAABaSURBVDhP7ZJLCsAwCEQ9m/e/S9qN2ymWfEASOy1ZduAR
        FOetIgAkxszAcHdXAlVNoQRHOafsF/jAkAp8mUEJ2kHkF4yCv41PgshrQf1nPfsFGY8ChtrrASAXC7HT
        o827C3kAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lgAAyMkAAAAAAAAAAAAAyrXLzKKilL0AwLMAAJvAzanOAAC8tAAAAAAAAAAAAADP0NHS09TV1pbQ16SU
        yKHY2drGpMfbAAAAAAAAAAAAAADc3Tre35AA4Dqq1s/hnQAA4uOV5AAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/////////////////////////////////7////4AAA/8AAAH/AAAAfwAAAH8AAAB8AAAA/EA
        AB/wAAA/8AAw//AAMP/wADD/8AAw/8AAAP+AAAH/gAAB/4AAAf/AgMP/////////////////////////
        //////////////////8oAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA0AAAAqAAAAMwAAAB0AAAAMAAAAGgAAAAwAAAAKAAAAHgAAAA8AAAAWAAAAMAAA
        ACwAAAAPAAAAAgAAABgAAAAyAAAALAAAAA8AAAASAAAAFwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAXAABpfAAAuMcAALTQAABkrAAATHoAALiaAAAAUgAAZGYAALykAAAfagAA
        iZ0AAL3OAACixgAAGH8AAABBAACXnAAAvdEAAKDFAAAQfQAApYQAAIqAAAAAHQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAaFwAAPHzAAC67QAAvfUAAPb9AABf7QAA7vsAAALTAADS5QAA
        yOkAAInIAADw/AAAt9gAAOToAADC6gAAbscAAPL9AACv6QAA6fYAAJvkAADL7QAAqewAAAB7AAAAMgAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAADBlgAA1fsAAD+oAADX6QAA+v4AAGLmAAD0/wAA
        v/8AAO//AABJ7AAAyuYAALXwAAAAWAAAf38AAPH+AACN/gAA2PcAAACHAADOxQAAtPoAAMb8AADe/wAA
        yfAAAJjFAAAAUQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAMeOAADT/AAAIbYAAIG8AACH0gAA
        ZrwAAPP/AACb/wAAyf8AAMj3AADE9AAAs/cAAACLAABvpgAA8f0AAJD5AADY9AAAAHYAANG9AAC1+wAA
        xv0AALz/AACT/wAA9v0AADuOAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAIQAAbFYAAPPtAAC69AAA
        yvUAAObvAABqqAAA9f8AALT+AADW/gAAzPEAAIPPAADu/gAAr/cAAN36AADD3wAAnc0AANjzAAAAjwAA
        y8gAALb3AADI9gAA1P8AAMH+AADz9AAAM20AAAAGAAAAAAAAAAAAAAAAAAAAAQAAAD8AAAC0AAAAkAAA
        dloAAMSpAACi+AAARe4AAEaNAACd9AAAm/0AAJvdAAA29wAAAPYAAGz+AACo/wAAi/8AAAzCAABd1QAA
        gP4AAAD2AABv+wAAbf4AAILTAAC9pAAAwZYAAIhlAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAcQAA
        AP8AAADaAAAAKwAAADQAAADrAAAA+wAAAKQAAAD3AAAA9wAAAK8AAAD/AAAA/wAAAPsAAAD3AAAA9QAA
        AKoAAAD4AAAA/wAAAPwAAAD3AAAA9gAAAJEAAAAbAAAABwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAB1AAAA/wAAAOkAAABGAAAASAAAAO8AAAD9AAAAqwAAAPgAAAD5AAAAsAAAAP8AAAD3AAAAdwAA
        AEAAAAA5AAAAVAAAAPUAAAD9AAAAjwAAAEEAAAA8AAAAHgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAHUAAAD/AAAA/gAAANwAAADdAAAA/gAAAP0AAACrAAAA+AAAAPkAAACwAAAA/wAA
        AO0AAAA7AAAAAAAAAAAAAAA8AAAA9AAAAPkAAABZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAdQAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAKsAAAD4AAAA+QAA
        ALAAAAD/AAAA7QAAADsAAAAAAAAAAAAAADwAAAD0AAAA+QAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAB1AAAA/wAAAPUAAACHAAAAiAAAAPcAAAD9AAAAqwAA
        APgAAAD5AAAAsAAAAP8AAADtAAAAOwAAAAAAAAAAAAAAPAAAAPQAAAD5AAAAWAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAFgAAAIMAAAD/AAAA5gAAAEAAAABDAAAA7QAA
        AP4AAAC7AAAA+QAAAPsAAAC/AAAA/wAAAPEAAABPAAAAFAAAABMAAABRAAAA9gAAAPgAAABWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAJgAAAG4AAACZAAAA0QAAAP8AAADyAAAApQAA
        ALMAAAD6AAAA/wAAAPQAAAD+AAAA/gAAAPEAAAD/AAAA/gAAALYAAACUAAAAmwAAAMYAAAD+AAAA4QAA
        ADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAACIAAAA6QAAAO8AAADrAAAA/gAA
        APwAAAD9AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP4AAADwAAAAzwAAAPcAAAD+AAAA/wAA
        AO4AAAB9AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFgAAAMQAAAC7AAAAgAAA
        AKgAAAD9AAAA/QAAAPsAAADyAAAA/wAAAPoAAADmAAAA/wAAAP8AAAD8AAAA+gAAAJUAAABUAAAA7AAA
        AP4AAAD+AAAA0QAAAEMAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAowAA
        ANQAAADFAAAAsgAAAOUAAAC+AAAA4gAAAJ0AAAD3AAAA1AAAAKIAAAD5AAAA+wAAAO4AAADvAAAAbQAA
        ADgAAADgAAAA8AAAAPkAAADPAAAATQAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAoAAAAkwAAAJgAAABYAAAAcAAAADYAAABxAAAAMgAAAHgAAABYAAAAPAAAAJ0AAACjAAAAbwAA
        AHUAAAAsAAAAFAAAAHMAAAB+AAAApAAAAJ4AAAAxAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAIAAAACwAAAAMAAAAFAAAAAgAAAAUAAAACAAAABQAAAAQAAAABAAAACgAA
        AAwAAAAFAAAABAAAAAIAAAAAAAAABQAAAAcAAAAMAAAACwAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP////////////////////////////////4AAAf8AAAH+AAAAfgAAAD4AAAA8AAAAOAA
        AAHgAAAD4AAAD+AAMP/gADD/4AAw/8AAAP8AAAD/AAAA/wAAAP8AAAD/gAAA/8AAQf//////////////
        ////////////////////////
</value>
  </data>
</root>